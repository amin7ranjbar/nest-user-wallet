version: '3.7'
services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    networks:
      - backend


  postgres:
    restart: always
    container_name: postgres
    image: postgres:latest
    hostname: ${POSTGRES_HOST}
    ports:
      - 5432:5432
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${WALLET_DB_NAME},${USER_DB_NAME}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d

  pgadmin:
    restart: always
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - backend

  redis:
    image: "redis:alpine"
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
 
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${COMMANDER_USERNAME}
      HTTP_PASSWORD: ${COMMANDER_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - backend

  user-app:
    build: ./user
    container_name: user-app
    image: app/user
    restart: always
    ports:
      - 3000:3000
    volumes:
      - .env:/var/www/app/.env
    networks:
      - backend
    depends_on:
      - postgres
    links:
      - postgres

  wallet-app:
    build: ./wallet
    container_name: wallet-app
    image: app/wallet
    restart: always
    volumes:
      - .env:/var/www/app/.env
    networks:
      - backend
    depends_on:
      - postgres
    links:
      - postgres

networks:
  backend:
    driver: bridge

volumes:
  rabbitmq_data:
    name: rabbitmq_data
  postgres_data:
    name: postgres_data
  pgadmin_data:
    name: pgadmin_data
  redis_data:
    name: redis_data
  rabbitmq_log:
    name: rabbitmq_log